/*
 * Project: FileFactory
 * Version: 1.0.1
 * Author: delvedor - infoFACTORY
 * Twitter: @delvedor - @info_factory
 * License: GNU GPLv2
 * GitHub: https://github.com/delvedor/FileFactory
*/
(function(g){var k=function(){return new k.init},q=0,m="",r=0,c=function(e,a,d){if(typeof a!==d)throw"FileFactory error: "+a+" is not a "+d+" at "+e+"()";};k.prototype={getTaskProgress:function(){return r},getFreeDiskSpace:function(){var e=Q.defer();cordova.exec(function(a){e.resolve(a)},function(a){e.reject(a)},"File","getFreeDiskSpace",[]);return e.promise},checkFile:function(e,a){c("checkFile",e,"string");c("checkFile",a,"string");var d=Q.defer();if(/^\//.test(a))d.reject({code:4,text:"file/directory cannot start with /"});
else try{var b=m+e+a;g.resolveLocalFileSystemURL=g.resolveLocalFileSystemURL||g.webkitResolveLocalFileSystemURL;g.resolveLocalFileSystemURL(b,function(b){!0===b.isFile||b.isDirectory?d.resolve({found:b.isFile||b.isDirectory,isFile:b.isFile,isDir:b.isDirectory}):d.reject({code:5,text:"input is not a file or directory"})},function(b){1===b.code?d.resolve({found:!1,isFile:!1,isDir:!1}):d.reject(b)})}catch(f){d.reject(f)}return d.promise},downloadFile:function(e,a,d,b,f,l){if(!g.FileTransfer)throw"FileFactory error: missing cordova-plugin-file-transfer plugin";
c("downloadFile",e,"string");c("downloadFile",a,"string");c("downloadFile",d,"string");c("downloadFile",b,"boolean");c("downloadFile",f||"","string");c("downloadFile",l||{},"object");var h=Q.defer(),n=this,p=!1;n.checkFile(a,d).then(function(a){if(a.found)b&&console.log("downloadFile: there is already a file with the same name"),h.reject({code:1,text:"downloadFile: there is already a file with the same name"});else return n.getFreeDiskSpace()}).then(function(c){if(b){var g=Date.now();console.log("Starting download..")}var k=
new FileTransfer;k.download(e,m+a+d,function(){if(b){var a=(Date.now()-g)/1E3;console.log("Download succeded");console.log("-- task completed in "+a+" seconds")}q=0;h.resolve(!0)},function(c){b&&console.log("Download failed: ",c);q+=1;3===c.code?(k.abort(),h.reject({code:6,text:"Device offline"})):1===q&&(b&&console.log("Make a second attempt.."),n.downloadFile(e,a,d,b,f))},!1,{headers:l});k.onprogress=function(a){p||(p=!0,1024*c<a.total&&(k.abort(),b&&console.log("downloadFile() -> not enough space in disk -> free space: ",
1024*c," - file size: ",a.total),h.reject({code:3,text:"Not enough space in disk"})));r=parseInt(Math.round(a.loaded/a.total*100).toFixed(0),10);f&&(document.getElementById(f).value=r);b&&console.log("Download progress: ",a.loaded/a.total*100)}},function(a){b&&console.log("downloadFile() error -> checkFile() error ->",a);h.reject(a)});return h.promise},unZipFile:function(e,a,d,b,f){if(!g.zip)throw"FileFactory error: missing cordova-plugin-zip plugin";c("unZipFile",e,"string");c("unZipFile",a,"string");
c("unZipFile",d,"string");c("unZipFile",b,"string");c("unZipFile",f,"boolean");var l=Q.defer(),h=this,n=!1,p=0;h.checkFile(e,a).then(function(a){if(a.found)return h.checkFile(d,b);f&&console.log("unZipFile: file not found.");l.reject({code:2,text:"unZipFile: file not found"})}).then(function(b){if(b.found)f&&console.log("unZipFile: there is already a file with the same name"),l.reject({code:1,text:"unZipFile: there is already a file with the same name"});else return h.getFreeDiskSpace()}).then(function(){if(f){var c=
Date.now();console.log("Starting unzip..")}g.zip.unzip(m+e+a,m+d+b,function(b){-1===b?1024*freeSpace<p&&(f&&console.log("unZipFile() -> not enough space in disk -> free space: ",1024*freeSpace," - file size: ",p),l.reject({code:3,text:"Not enough space in disk"})):(f&&(b=(Date.now()-c)/1E3,console.log("Success unzip"),console.log("-- task completed in "+b+" seconds")),l.resolve(!0))},function(b){n||(n=!0,p=b.total);f&&console.log("Unzip progress: ",b.loaded/b.total*100)})},function(b){f&&console.log("unZipFile() error -> checkFile() error ->",
b);l.reject(b)});return l.promise},openFile:function(e,a,d,b){if(!g.fileOpener2)throw"FileFactory error: missing cordova-plugin-file-opener2 plugin";c("openFile",e,"string");c("openFile",a,"string");c("openFile",d,"string");c("openFile",b,"boolean");var f=$Q.defer();this.checkFile(e,a).then(function(c){c.found?g.fileOpener2.open(m+e+a,d,{error:function(a){b&&console.log("openFile error: ",a);f.reject(a)},success:function(){b&&console.log("openFile succeded!");f.resolve(!0)}}):(b&&console.log("openFile: file not found"),
f.reject({code:2,text:"openFile: file not found"}))},function(a){b&&console.log("openFile() error -> checkFile() error ->",a);f.reject(a)});return f.promise},deleteFile:function(e,a,d){c("askDownload",e,"string");c("askDownload",a,"string");c("askDownload",d,"boolean");var b=Q.defer();this.checkFile(e,a).then(function(c){if(c.found)if(c.isFile){/^\//.test(a)&&b.reject({code:4,text:"file/directory cannot start with /"});try{g.resolveLocalFileSystemURL(m+e,function(c){c.getFile(a,{create:!1},function(a){a.remove(function(){d&&
console.log("File successfully removed");b.resolve({success:!0,fileRemoved:a})},function(a){d&&console.log("There was an error while removing the file",a);b.reject(a)})},function(a){b.reject(a)})},function(a){b.reject(a)})}catch(l){b.reject(l)}}else{/^\//.test(a)&&b.reject("file-name cannot start with /");try{g.resolveLocalFileSystemURL(m+e,function(c){c.getDirectory(a,{create:!1},function(a){a.removeRecursively(function(){d&&console.log("Directory successfully removed");b.resolve({success:!0,fileRemoved:a})},
function(a){d&&console.log("There was an error while removing the directory",a);b.reject(a)})},function(a){b.reject(a)})},function(a){b.reject(a)})}catch(h){b.reject(h)}}else d&&console.log("deleteFile: file not found."),b.reject({code:2,text:"deleteFile: file not found"})},function(a){d&&console.log("deleteFile() error -> checkFile() error ->",a);b.reject(a)});return b.promise},askUser:function(e,a,d,b){if(!g.navigator.notification)throw"FileFactory error: missing cordova-plugin-dialogs plugin";
c("askUser",e,"string");c("askUser",a,"string");c("askUser",d,"string");c("askUser",b,"string");var f=Q.defer();navigator.notification.confirm(a,function(a){1===a?f.resolve(!0):f.resolve(!1)},e,[d,b]);return f.promise}};k.init=function(){document.addEventListener("deviceready",function(){if(!g.cordova)throw"FileFactory error: missing Cordova";if(!g.cordova.file)throw"FileFactory error: missing cordova-plugin-file plugin";if(!g.Q)throw"FileFactory error: missing Q library";"android"===g.cordova.platformId&&
(m=cordova.file.externalDataDirectory||cordova.file.dataDirectory);"ios"===g.cordova.platformId&&(m=cordova.file.documentsDirectory)})};k.init.prototype=k.prototype;g.FileFactory=g.FF=k()})(window);
